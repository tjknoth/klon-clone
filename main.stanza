#use-added-syntax(jitx)
defpackage main :
  import core
  import jitx
  import jitx/commands
  import ocdb/utils/generic-components
  import ocdb/utils/symbols
  import ocdb/utils/landpatterns
  import helpers

; carl notes:
; can try: film capacitor, ptfe capacitor

pcb-material copper :
  type = Conductor
  name = "Copper"
  
pcb-material core :
  type = Dielectric
  dielectric-coefficient = 4.26
  name = "PR4 Core"

pcb-material soldermask :
  type = Dielectric
  dielectric-coefficient = 3.9
  name = "Taiyo BSN4000"

public pcb-stackup jlcpcb-jlc-2layer:
  name = "JLCPCB 2-layer 1.6mm"
  layer(0.019, soldermask) ; 0.5mil over conductor
  layer(0.035, copper) 
  layer(1.2650, core)
  layer(0.035, copper) 
  layer(0.019, soldermask) ; 0.5mil over conductor

; Define the shape/size of the board
val board-shape = RoundedRectangle(68.5, 93.5, 0.25)

defn c0g-cap (cap) : ceramic-cap(["capacitance" => cap, "temperature-coefficient.code" => "C0G"])
; TODO: find replacement
defn x7r-cap (cap) : ceramic-cap(["capacitance" => cap, "temperature-coefficient.code" => "X7R"])
;defn x7r-cap (cap) : ceramic-cap(cap)

defn header-label (lbl) : ocdb/artwork/board-text/text(lbl, 1.0, 0.0)
; Setup the board
defn setup-board () :
  set-board(ocdb/utils/defaults/default-board(ocdb/manufacturers/stackups/jlcpcb-jlc2313, board-shape))
  set-rules(ocdb/manufacturers/rules/jlcpcb-rules)

; Input stage 
pcb-module input :
  pin gnd
  pin power-4v5
  pin power-9v
  pin out
  pin opamp-neg
  pin opamp-pos
  pin opamp-out


  ; Components: input jack header, two resistors and a cap
  public inst jack : pin-header(3)
  reference-designator(jack) = "IN"
  inst r1 : chip-resistor(10.0e3)
  reference-designator(r1) = "r1"
  inst r2 : chip-resistor(1.0e6)
  reference-designator(r2) = "r2"
  inst c1 : c0g-cap(0.1e-6)
  reference-designator(c1) = "c1"

  net (jack.p[3], r1.p[1])
  ; jack.p[2] not used
  net GND (jack.p[1], gnd)
  net (r1.p[2], c1.p[1])
  net (c1.p[2], r2.p[1])
  net (r2.p[2], power-4v5)
  net (r2.p[1], opamp-pos)
  net (opamp-out, out)
  net (out, opamp-neg)

  symbol(GND) = ground-sym
  schematic-group(self) = input
  

; Bypass mode
pcb-module bypass :
  pin in
  pin out
  pin gnd

  inst c2 : x7r-cap(4.7e-6)
  reference-designator(c2) = "c2"
  inst r3 : chip-resistor(100.0e3)
  reference-designator(r3) = "r3"
  inst r4 : chip-resistor(560.0)
  reference-designator(r4) = "r4"

  net (in, c2.p[1])
  net (c2.p[2], r3.p[1])
  net GND (r3.p[2], gnd)
  net (r3.p[1], r4.p[1])
  net (r4.p[2], out)

  symbol(GND) = ground-sym
  schematic-group(self) = bypass


; opamp gain
pcb-module gain :
  pin in
  pin out
  pin gnd
  pin power-4v5
  pin power-9v 
  pin opamp-neg
  pin opamp-pos
  pin opamp-out

  ; TODO: these are 10k! need the right one
  ; TODO: what's the deal with gain-a? connected to constant power supply
  ;inst rv-gain-a : database-part(["mpn" => "RK1631110U1Q", "manufacturer" => "ALPSALPINE"]) 
  ;inst rv-gain : database-part(["mpn" => "RK16312A0B85", "manufacturer" => "ALPSALPINE"]) 
  ;inst rv-gain : database-part(["mpn" => "RK16312A0BKR", "manufacturer" => "ALPSALPINE"])
  inst rv-gain : components/ALPSALPINE/RK16312A0BKR/component
  reference-designator(rv-gain) = "rv-gain"

  inst r5 : chip-resistor(5.1e3)
  reference-designator(r5) = "r5"
  inst r6 : chip-resistor(10.0e3)
  reference-designator(r6) = "r6"
  inst r7 : chip-resistor(1.5e3)
  reference-designator(r7) = "r7"
  inst r8 : chip-resistor(1.5e3)
  reference-designator(r8) = "r8"
  inst r9 : chip-resistor(1.0e3)
  reference-designator(r9) = "r9"
  inst r10 : chip-resistor(2.0e3)
  reference-designator(r10) = "r10"
  inst r11 : chip-resistor(15.0e3)
  reference-designator(r11) = "r11"
  inst r12 : chip-resistor(422.0e3)
  reference-designator(r12) = "r12"
  inst r13 : chip-resistor(1.0e3)
  reference-designator(r13) = "r13"
  ; where is r14?
  ; This is a placeholder to prevent off-by-one in the schematic!
  ; not connected to anything
  ;inst r14 : chip-resistor(100000.0) 
  inst r15 : chip-resistor(22.0e3)
  reference-designator(r15) = "r15"
  inst r16 : chip-resistor(47.0e3)
  reference-designator(r16) = "r16"
  inst r17 : chip-resistor(27.0e3)
  reference-designator(r17) = "r17"
  inst r18 : chip-resistor(12.0e3)
  reference-designator(r18) = "r18"
  inst r19 : chip-resistor(15.0e3)
  reference-designator(r19) = "r19"

  inst c3 : c0g-cap(0.1e-6)
  reference-designator(c3) = "c3"
  inst c4 : c0g-cap(68.0e-9)
  reference-designator(c4) = "c4"
  inst c5 : c0g-cap(68.0e-9)
  reference-designator(c5) = "c5"
  inst c6 : c0g-cap(390.0e-9)
  reference-designator(c6) = "c6"
  inst c7 : c0g-cap(82.0e-9)
  reference-designator(c7) = "c7"
  inst c8 : c0g-cap(390.0e-12)
  reference-designator(c8) = "c8"
  inst c9 : x7r-cap(1.0e-6)
  reference-designator(c9) = "c9"
  inst c10 : x7r-cap(1.0e-6)
  reference-designator(c10) = "c10"
  inst c11 : c0g-cap(2.2e-9)
  reference-designator(c11) = "c11"
  inst c12 : c0g-cap(27.0e-9)
  reference-designator(c12) = "c12"
  inst c16 : x7r-cap(1.0e-6)
  reference-designator(c16) = "c16"

  ; pin headers for germanium diodes (1N34A)
  ; d2: p[1] => A, p[2] => K
  inst d2 : pin-header(2)
  reference-designator(d2) = "d2"
  ; d3: p[1] => A, p[2] => K
  inst d3 : pin-header(2)
  reference-designator(d3) = "d3"



  ; so many nets
  net (in, r5.p[1])
  net (in, c4.p[1])
  net (r5.p[2], c4.p[2])
  net (r5.p[2], r8.p[1])
  net (r8.p[1], c6.p[1])
  net (c6.p[1], rv-gain.p[1])
  net (c6.p[2], r9.p[1])
  net (r9.p[2], power-4v5)
  net (rv-gain.p[3], power-4v5)
  net (r8.p[2], power-4v5)
  net (in, c3.p[1])
  net (c3.p[2], r7.p[1])
  net (r7.p[2], c16.p[1])
  net (c16.p[2], r19.p[1])
  net (r19.p[2], out)
  net (c3.p[2], r6.p[1])
  net (c3.p[2], c5.p[1])
  net (c5.p[2], r6.p[2])
  net (r6.p[2], rv-gain.p[4])
  net (r6.p[2], opamp-pos)
  net (rv-gain.p[5], power-4v5)
  net (rv-gain.p[6], r10.p[1])
  net (r10.p[2], r11.p[1])
  net (r10.p[2], c7.p[1])
  net (c7.p[2], r11.p[2])
  net (r11.p[2], opamp-neg)
  net (r11.p[2], r12.p[1])
  net (r11.p[2], c8.p[1])
  net (c8.p[2], r12.p[2])
  net (r12.p[2], opamp-out)
  net (opamp-out, c9.p[1])
  net (c9.p[2], r13.p[1])
  net (r13.p[2], d2.p[2])
  net (d2.p[1], d3.p[2])
  net (d2.p[2], d3.p[1])
  net (d3.p[1], c10.p[1])
  net (c10.p[2], r16.p[1])
  net (r16.p[2], out)
  net (c10.p[2], c11.p[1])
  net (c11.p[2], r15.p[1])
  net (r15.p[2], rv-gain.p[2])
  net (r15.p[2], r17.p[2])
  net (r17.p[1], c12.p[1])
  net (r15.p[2], r18.p[2])
  net (r18.p[1], c12.p[2])
  net (c12.p[1], out)

  net GND (gnd, c16.p[2], d2.p[1])

  symbol(GND) = ground-sym
  schematic-group(self) = gain


; summing opamp
pcb-module sum-amp :
  pin in
  pin out
  pin power-n8v6
  pin power-16v2
  pin power-4v5
  pin opamp-neg
  pin opamp-pos
  pin opamp-out

  ; components: 1 resistor, 1 cap
  inst r20 : chip-resistor(392.0e3)
  reference-designator(r20) = "r20"
  inst c13 : c0g-cap(820.0e-12)
  reference-designator(c13) = "c13"

  ; nets: all in parallel
  net (in, opamp-neg)
  net (power-4v5, opamp-pos)
  net (in, r20.p[1])
  net (in, c13.p[1])
  net (r20.p[2], out)
  net (c13.p[2], out)
  net (opamp-out, out)

  schematic-group(self) = sum-amp

; tone control
pcb-module tone :
  pin in
  pin out
  pin power-4v5
  pin power-16v2
  pin power-n8v6
  pin opamp-neg
  pin opamp-pos
  pin opamp-out

  ; Components
  inst r21 : chip-resistor(1.8e3)
  reference-designator(r21) = "r21"
  inst r22 : chip-resistor(100.0e3)
  reference-designator(r22) = "r22"
  inst r23 : chip-resistor(4.7e3)
  reference-designator(r23) = "r23"
  inst r24 : chip-resistor(100.0e3)
  reference-designator(r24) = "r24"
  inst c14 : c0g-cap(3.9e-9)
  reference-designator(c14) = "c14"
  ; 10k linear taper pot
  inst rv-tone : components/ALPSALPINE/RK1631110U1Q/component
  reference-designator(rv-tone) = "rv-tone"

  ; nets
  net (in, r21.p[1])
  net (in, r22.p[1])
  net (r21.p[2], rv-tone.p[1])
  net (rv-tone.p[3], r23.p[1])
  net (r23.p[2], out)
  net (rv-tone.p[2], c14.p[1])
  net (c14.p[2], r22.p[2])
  net (r22.p[2], opamp-neg)
  net (power-4v5, opamp-pos)
  net (opamp-out, out)
  net (c14.p[2], r24.p[1])
  net (r24.p[2], out)

  schematic-group(self) = tone

; power supply
pcb-module power :
  pin gnd
  pin power-9v
  pin power-4v5
  pin power-n8v6
  pin power-16v2

  ; All instances have reference designators for easier
  ;  sub-layout sorting

  ; capacitors
  inst c17 : x7r-cap(47.0e-6)
  reference-designator(c17) = "c17"
  inst c18 : x7r-cap(47.0e-6)
  reference-designator(c18) = "c18"
  inst c19 : x7r-cap(1.0e-6)
  reference-designator(c19) = "c19"
  inst c20 : x7r-cap(1.0e-6)
  reference-designator(c20) = "c20"
  inst c21 : x7r-cap(1.0e-6)
  reference-designator(c21) = "c21"
  inst c22 : x7r-cap(1.0e-6)
  reference-designator(c22) = "c22"
  ; resistors
  inst r29 : chip-resistor(27.0e3)
  reference-designator(r29) = "r29"
  inst r30 : chip-resistor(27.0e3)
  reference-designator(r30) = "r30"
  ; Zener diode
  ; A is base of triangle
  ; C/K is tip
  inst d4 : database-part(["mpn" => "1N4742A", "manufacturer" => "Tak Cheong"])
  reference-designator(d4) = "d4"
  ; Normal diodes
  inst d7 : database-part(["mpn" => "1N4001-E3/73", "manufacturer" => "Vishay"]) 
  reference-designator(d7) = "d7"
  inst d8 : database-part(["mpn" => "1N4001-E3/73", "manufacturer" => "Vishay"]) 
  reference-designator(d8) = "d8"
  ; DC power jack
  ; Pin header as placeholder. p[1] => CON1, p[2] => CON2
  inst j3 : pin-header(2) ;database-part(["mpn" => "DC-060A", "manufacturer" => "HRO Electronics"])
  reference-designator(j3) = "J3"
  ; Voltage converter 
  inst u3 : database-part(["mpn" => "MAX1044ESA+T", "manufacturer" => "Analog Devices"])
  reference-designator(u3) = "U3"

  ; Connect power, diode, capacitor c17
  net (j3.p[2], d4.K)
  net (c17.p[2], j3.p[2])
  net (power-9v, j3.p[2])

  ; 4v5 sub-circuit
  net (power-9v, r29.p[1])
  net (r29.p[2], r30.p[1])
  net (r29.p[2], power-4v5)
  net (r29.p[2], c18.p[1])


  ; Converter sub-circuit
  net (u3.N_C_BOOST, power-9v)
  net (u3.N_C_BOOST, d7.A)
  net (d7.K, c20.p[2])
  net (c20.p[2], d8.A)
  net (d8.K, power-16v2)
  net (d8.K, c21.p[1])
  net (u3.CAP+, c20.p[1])
  net (u3.CAP-, c22.p[1])
  net (c22.p[2], c20.p[1])
  net (u3.V+, power-9v)
  net (u3.VOUT, power-n8v6)
  net (u3.VOUT, c19.p[1])

  net GND (gnd, j3.p[1], d4.A, c17.p[1], r30.p[2], c18.p[2], c21.p[2], u3.GND, c19.p[2])

  symbol(GND) = ground-sym
  schematic-group(self) = power-supply


pcb-module output :
  pin gain-in
  pin bypass-in
  pin gnd

  ; panel mount jack and SPDT switch
  ; jack: p1 = tip, p2 = connector, p3 = shoulder
  ; switch: p1,2 = throws 
  public inst jack : pin-header(3)
  reference-designator(jack) = "OUTPUT"
  inst sw1 : pin-header(3)
  reference-designator(sw1) = "SWITCH"
  ; audio taper 10k pot
  inst rv-level : components/ALPSALPINE/RK1631110U1Q/component
  reference-designator(rv-level) = "LEVEL"
  ; capacitors and resistors
  inst c15 : x7r-cap(4.7e-6)
  reference-designator(c15) = "c15"
  inst r25 : chip-resistor(560.0)
  reference-designator(r25) = "r25"
  inst r243 : chip-resistor(68.0e3)
  reference-designator(r243) = "r243"
  inst r242 : chip-resistor(68.0e3)
  reference-designator(r242) = "r242"
  inst r28 : chip-resistor(100.0e3)
  reference-designator(r28) = "r28"

  ; nets
  net (gain-in, c15.p[1])
  net (c15.p[2], r25.p[1])
  net (r25.p[2], rv-level.p[1])
  net (rv-level.p[2], sw1.p[2])
  net (bypass-in, r243.p[1])
  net (bypass-in, sw1.p[1])
  net (r243.p[2], sw1.p[3])
  net (r242.p[2], sw1.p[3])
  net (r242.p[1], rv-level.p[2])
  net (sw1.p[3], jack.p[1])
  net (r28.p[1], jack.p[2])
  net (r28.p[1], jack.p[3])

  net GND (gnd, rv-level.p[3], r28.p[2])

  symbol(GND) = ground-sym
  schematic-group(self) = output

; Module to run as a design
pcb-module centaur :
  ; define some pins/ports
  pin gnd

  ; instantiate all sub-modules
  inst input : input
  inst gain : gain
  inst bypass : bypass
  inst sum-amp : sum-amp
  inst tone : tone
  inst power : power
  inst output : output

  ; instantate op-amps
  ;inst u1 : database-part(["mpn" => "TL072IDT", "manufacturer" => "STMicroelectronics"])
  inst u1 : components/STMicroelectronics/TL072IDT/component
  reference-designator(u1) = "U1"
  inst u2 : components/STMicroelectronics/TL072IDT/component
  reference-designator(u2) = "U2"
  ;inst u2 : database-part(["mpn" => "TL072IDT", "manufacturer" => "STMicroelectronics"])

  ; net 9v op-amp
  net (u1.VCC+, power.power-9v)
  ;net (u1.VCC-, gnd)
  net (u1.IN1+, input.opamp-pos)
  net (u1.IN1-, input.opamp-neg)
  net (u1.OUT1, input.opamp-out)
  net (u1.IN2+, gain.opamp-pos)
  net (u1.IN2-, gain.opamp-neg)
  net (u1.OUT2, gain.opamp-out)

  ; net 16v op-amp
  net (u2.VCC+, power.power-16v2)
  net (u2.VCC-, power.power-n8v6)
  net (u2.IN1+, sum-amp.opamp-pos)
  net (u2.IN1-, sum-amp.opamp-neg)
  net (u2.OUT1, sum-amp.opamp-out)
  net (u2.IN2+, tone.opamp-pos)
  net (u2.IN2-, tone.opamp-neg)
  net (u2.OUT2, tone.opamp-out)

  ; Net sub-modules
  net (input.out, gain.in, bypass.in)
  net (gain.out, sum-amp.in)
  net (sum-amp.out, tone.in)
  net (tone.out, output.gain-in)
  net (bypass.out, output.bypass-in)

  ; net gnds 
  net GND (input.gnd bypass.gnd gain.gnd power.gnd output.gnd, u1.VCC-) 
  symbol(GND) = ground-sym

  ; Net power module to all sub-modules
  net VCC9v (power.power-9v, input.power-9v, gain.power-9v)
  net VCC4v5 (power.power-4v5, input.power-4v5, gain.power-4v5, sum-amp.power-4v5, tone.power-4v5)
  net VCCn8v6 (power.power-n8v6, sum-amp.power-n8v6, tone.power-n8v6)
  net VCC16v2 (power.power-16v2, sum-amp.power-16v2, tone.power-16v2)

  val power-nets = [VCC4v5, VCC9v, VCCn8v6, VCC16v2]

  ; Apply default net class to all nets
  val default-net-class = NetClass(`Default, [`min-trace => 0.40])
  for x in all-connected-items(self) do :
    for n in nets(x) do :
      if not any?({connected?([_, n])}, power-nets) :
        property(n.net-class) = default-net-class

  ; Even thicker traces for power nets
  val power-net-class = NetClass(`Power, [`min-trace => 1.20])
  for n in [VCC4v5, VCC9v, VCCn8v6, VCC16v2] do :
    property(n.net-class) = power-net-class

  ; Add ground plane
  geom(GND) :
    copper-pour(LayerIndex(1), isolate = 0.1, rank = 1) = board-shape

  ; Add power plane
  geom(VCC9v) :
    copper-pour(LayerIndex(2), isolate = 0.1, rank = 1) = board-shape



  ; Place labels and a few symmetric components
  ;
  ; Input/output jacks
  ; These placements don't actually apply due to PD bug
  place(input.jack) at loc(-28.8, -1.0) on Top
  place(output.jack) at loc(28.8, -1.0) on Top
  ; Input jack pin labels
  inst in-jack-msg-base : header-label("sleeve")
  place(in-jack-msg-base) at loc(-31.0, 4.00) on Top
  inst in-jack-msg-tip : header-label("tip")
  place(in-jack-msg-tip) at loc(-32.3, -3.80) on Top
  inst in-jack-msg-mid : header-label("plug")
  place(in-jack-msg-mid) at loc(-32.3, -0.85) on Top
  ; germanium diode pins 
  ;inst d2A-msg : header-label("A")
  ;place(d2A-msg) at loc(-18.2, 3.85) on Top
  ;inst d2K-msg : header-label("K")
  ;place(d2K-msg) at loc(-18.2, 1.2) on Top
  ;inst d3A-msg : header-label("A")
  ;place(d3A-msg) at loc(-9.3, 1.2) on Top
  ;inst d3K-msg : header-label("K")
  ;place(d3K-msg) at loc(-9.3, 3.85) on Top
  ; Output jack pin labels
  inst out-jack-msg-base : header-label("sleeve")
  place(out-jack-msg-base) at loc(31.0, 4.00) on Top
  inst out-jack-msg-tip : header-label("tip")
  place(out-jack-msg-tip) at loc(32.3, -3.80) on Top
  inst out-jack-msg-mid : header-label("plug")
  place(out-jack-msg-mid) at loc(32.3, -0.85) on Top
  ; Potentiometer labels
  inst gain-msg : header-label("gain")
  place(gain-msg) at loc(-21.0, 43.0) on Top
  inst tone-msg : header-label("tone")
  place(tone-msg) at loc(0.0, 43.0) on Top
  inst output-msg : header-label("output")
  place(output-msg) at loc(21.0, 43.0) on Top
  ; Switch labels
  ;inst bypass-msg : header-label("off")
  ;place(bypass-msg) at loc(29.0, 27.0) on Top
  ;inst on-msg : header-label("on")
  ;place(on-msg) at loc(23.8, 24.2) on Top
  ;inst out-msg : header-label("out")
  ;place(out-msg) at loc(18.5, 27.0) on Top






; Write the board version on silkscreen
;inst version-label  : ocdb/artwork/board-text/version-silkscreen("Version 1.0")
;place(version-label) at loc(0.0, height(board-shape) / 2.0 - 1.0) on Bottom

; Set the design name - a directory with this name will be generated under the "designs" directory
set-current-design("centaur")

; Set the schematic sheet size
set-paper(ANSI-A)

; Setup the board properties
setup-board()

; Set the top level module (the module to be compile into a schematic and PCB)
set-main-module(centaur)

; Use any helper function from helpers.stanza here
; run-check-on-design(centaur)

; View the results
view-board()
view-schematic()